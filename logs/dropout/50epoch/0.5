Loading python/3.7.3
  Loading requirement: tcl/8.6.8 gcc/8.3.0
/afs/crc.nd.edu/user/p/ptaheri/Private/benchmarkSNN/yin_srnn/SRNN-ICONs2020/srnn_2layer-finalized_dropout.py:24: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  train_y = np.load('./SHD/data/10ms/trainY_10ms.npy').astype(np.float)
/afs/crc.nd.edu/user/p/ptaheri/Private/benchmarkSNN/yin_srnn/SRNN-ICONs2020/srnn_2layer-finalized_dropout.py:27: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  test_y = np.load('./SHD/data/10ms/testY_10ms.npy').astype(np.float)
device: cuda:0
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  0 . Loss:  2.504974842071533 . Tr Accuracy:  19.53125 . Ts Accuracy:  18.75
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  1 . Loss:  2.02915620803833 . Tr Accuracy:  39.84375 . Ts Accuracy:  39.84375
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  2 . Loss:  1.5415173768997192 . Tr Accuracy:  45.3125 . Ts Accuracy:  47.65625
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  3 . Loss:  1.3240199089050293 . Tr Accuracy:  49.21875 . Ts Accuracy:  47.65625
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  4 . Loss:  1.4434349536895752 . Tr Accuracy:  60.9375 . Ts Accuracy:  58.59375
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  5 . Loss:  0.977211058139801 . Tr Accuracy:  63.28125 . Ts Accuracy:  60.9375
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  6 . Loss:  0.8796242475509644 . Tr Accuracy:  74.21875 . Ts Accuracy:  66.40625
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  7 . Loss:  0.9407376050949097 . Tr Accuracy:  67.96875 . Ts Accuracy:  65.625
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  8 . Loss:  0.7876131534576416 . Tr Accuracy:  72.65625 . Ts Accuracy:  64.84375
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  9 . Loss:  0.8963974714279175 . Tr Accuracy:  78.90625 . Ts Accuracy:  67.96875
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  10 . Loss:  0.5990287661552429 . Tr Accuracy:  72.65625 . Ts Accuracy:  67.96875
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  11 . Loss:  0.9332633018493652 . Tr Accuracy:  74.21875 . Ts Accuracy:  71.09375
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  12 . Loss:  0.5896347165107727 . Tr Accuracy:  79.6875 . Ts Accuracy:  63.28125
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  13 . Loss:  0.6936007738113403 . Tr Accuracy:  72.65625 . Ts Accuracy:  67.96875
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  14 . Loss:  0.8087372183799744 . Tr Accuracy:  85.9375 . Ts Accuracy:  65.625
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  15 . Loss:  0.6148297190666199 . Tr Accuracy:  85.9375 . Ts Accuracy:  67.96875
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  16 . Loss:  0.352482408285141 . Tr Accuracy:  90.625 . Ts Accuracy:  70.3125
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  17 . Loss:  0.6419592499732971 . Tr Accuracy:  84.375 . Ts Accuracy:  70.3125
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  18 . Loss:  0.554757297039032 . Tr Accuracy:  85.15625 . Ts Accuracy:  73.4375
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  19 . Loss:  0.5283823609352112 . Tr Accuracy:  81.25 . Ts Accuracy:  61.71875
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  20 . Loss:  0.48928332328796387 . Tr Accuracy:  85.9375 . Ts Accuracy:  73.4375
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  21 . Loss:  0.27495458722114563 . Tr Accuracy:  85.9375 . Ts Accuracy:  76.5625
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  22 . Loss:  0.4303843379020691 . Tr Accuracy:  78.90625 . Ts Accuracy:  74.21875
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  23 . Loss:  0.3041451573371887 . Tr Accuracy:  83.59375 . Ts Accuracy:  76.5625
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  24 . Loss:  0.35259416699409485 . Tr Accuracy:  86.71875 . Ts Accuracy:  77.34375
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  25 . Loss:  0.3300904333591461 . Tr Accuracy:  80.46875 . Ts Accuracy:  75.0
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  26 . Loss:  0.313387393951416 . Tr Accuracy:  86.71875 . Ts Accuracy:  78.90625
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  27 . Loss:  0.4619617760181427 . Tr Accuracy:  82.8125 . Ts Accuracy:  78.90625
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  28 . Loss:  0.40186163783073425 . Tr Accuracy:  86.71875 . Ts Accuracy:  79.6875
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  29 . Loss:  0.4829682409763336 . Tr Accuracy:  83.59375 . Ts Accuracy:  77.34375
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  30 . Loss:  0.268078088760376 . Tr Accuracy:  86.71875 . Ts Accuracy:  80.46875
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  31 . Loss:  0.47748705744743347 . Tr Accuracy:  81.25 . Ts Accuracy:  77.34375
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  32 . Loss:  0.6370171904563904 . Tr Accuracy:  88.28125 . Ts Accuracy:  77.34375
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  33 . Loss:  0.4635132849216461 . Tr Accuracy:  85.9375 . Ts Accuracy:  81.25
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  34 . Loss:  0.3979192078113556 . Tr Accuracy:  89.84375 . Ts Accuracy:  75.0
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  35 . Loss:  0.3378136157989502 . Tr Accuracy:  85.9375 . Ts Accuracy:  82.03125
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  36 . Loss:  0.4385869801044464 . Tr Accuracy:  93.75 Loading python/3.7.3
  Loading requirement: tcl/8.6.8 gcc/8.3.0
/afs/crc.nd.edu/user/p/ptaheri/Private/benchmarkSNN/yin_srnn/SRNN-ICONs2020/srnn_2layer-finalized_pruning.py:25: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  train_y = np.load('./SHD/data/10ms/trainY_10ms.npy').astype(np.float)
/afs/crc.nd.edu/user/p/ptaheri/Private/benchmarkSNN/yin_srnn/SRNN-ICONs2020/srnn_2layer-finalized_pruning.py:28: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  test_y = np.load('./SHD/data/10ms/testY_10ms.npy').astype(np.float)
. Ts Accuracy:  75.78125
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  37 . Loss:  0.5089859962463379 . Tr Accuracy:  85.15625 . Ts Accuracy:  72.65625
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  38 . Loss:  0.3838236927986145 . Tr Accuracy:  92.1875 . Ts Accuracy:  79.6875
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  39 . Loss:  0.39528486132621765 . Tr Accuracy:  91.40625 . Ts Accuracy:  78.90625
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  40 . Loss:  0.2908172011375427 . Tr Accuracy:  85.9375 . Ts Accuracy:  78.90625
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  41 . Loss:  0.2688755691051483 . Tr Accuracy:  88.28125 . Ts Accuracy:  78.90625
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  42 . Loss:  0.3449482321739197 . Tr Accuracy:  92.96875 . Ts Accuracy:  80.46875
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  43 . Loss:  0.23847687244415283 . Tr Accuracy:  89.84375 . Ts Accuracy:  78.90625
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  44 . Loss:  0.4079749584197998 . Tr Accuracy:  85.9375 . Ts Accuracy:  78.125
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  45 . Loss:  0.4246208667755127 . Tr Accuracy:  89.84375 . Ts Accuracy:  82.8125
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  46 . Loss:  0.24621239304542542 . Tr Accuracy:  89.84375 . Ts Accuracy:  78.125
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  47 . Loss:  0.38306912779808044 . Tr Accuracy:  88.28125 . Ts Accuracy:  79.6875
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  48 . Loss:  0.29241788387298584 . Tr Accuracy:  89.84375 . Ts Accuracy:  76.5625
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
epoch:  49 . Loss:  0.5134843587875366 . Tr Accuracy:  84.375 . Ts Accuracy:  78.90625
torch.Size([128, 100, 700])
torch.Size([128, 100, 700])
total :128
 Accuracy:  76.5625
